package telas;

import java.sql.*;
import dados.AppDao;
import javax.swing.JOptionPane;

public class Paciente extends javax.swing.JFrame {

    /**
     * Creates new form CadastroPaciente
     */
    public Paciente() {
        initComponents();
        
        mnuPacientes.setVisible(false);
        mnuFuncionarios.setVisible(false);
    }
    
    public Paciente(String adm){
        initComponents();
        
        mnuPacientes.setVisible(true);
        mnuFuncionarios.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNomePaciente = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        lblCpfPaciente = new javax.swing.JLabel();
        lblTelPaciente = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblCepPaciente = new javax.swing.JLabel();
        lblTituloFormulario = new javax.swing.JLabel();
        lblEndPaciente = new javax.swing.JLabel();
        txtEndPaciente = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblBairroPaciente = new javax.swing.JLabel();
        txtBairroPaciente = new javax.swing.JTextField();
        lblNumPaciente = new javax.swing.JLabel();
        txtNumPaciente = new javax.swing.JTextField();
        lblCompPaciente = new javax.swing.JLabel();
        txtCompPaciente = new javax.swing.JTextField();
        btnCadastrarPaciente = new javax.swing.JButton();
        txtTelPaciente = new javax.swing.JFormattedTextField();
        txtCpfPaciente = new javax.swing.JFormattedTextField();
        txtCepPaciente = new javax.swing.JFormattedTextField();
        mnuPaciente = new javax.swing.JMenuBar();
        mnuPacientes = new javax.swing.JMenu();
        itmAlterarPaciente = new javax.swing.JMenuItem();
        itmBuscarPaciente = new javax.swing.JMenuItem();
        itmExcluirPaciente = new javax.swing.JMenuItem();
        itmListarPaciente = new javax.swing.JMenuItem();
        mnuFuncionarios = new javax.swing.JMenu();
        mnuMedicos = new javax.swing.JMenu();
        itmAlterarMedico = new javax.swing.JMenuItem();
        itmExcluirMedico = new javax.swing.JMenuItem();
        itmBuscarMedico = new javax.swing.JMenuItem();
        itmCadastrarMedico = new javax.swing.JMenuItem();
        mnuRecepcionista = new javax.swing.JMenu();
        itmAlterarRep = new javax.swing.JMenuItem();
        itmExcluirRep = new javax.swing.JMenuItem();
        itmBuscarRep = new javax.swing.JMenuItem();
        itmCadastrarRep = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro do Paciente - ADS Consultas");
        getContentPane().setLayout(null);

        lblNomePaciente.setText("Nome: ");
        getContentPane().add(lblNomePaciente);
        lblNomePaciente.setBounds(70, 60, 50, 20);

        txtNomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtNomePaciente);
        txtNomePaciente.setBounds(70, 80, 340, 30);

        lblCpfPaciente.setText("CPF:");
        getContentPane().add(lblCpfPaciente);
        lblCpfPaciente.setBounds(500, 60, 40, 20);

        lblTelPaciente.setText("Telefone:");
        getContentPane().add(lblTelPaciente);
        lblTelPaciente.setBounds(70, 120, 70, 20);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 50, 780, 10);

        lblCepPaciente.setText("CEP:");
        getContentPane().add(lblCepPaciente);
        lblCepPaciente.setBounds(500, 200, 40, 20);

        lblTituloFormulario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTituloFormulario.setText("Dados do Paciente");
        getContentPane().add(lblTituloFormulario);
        lblTituloFormulario.setBounds(30, 10, 160, 30);

        lblEndPaciente.setText("Endereço:");
        getContentPane().add(lblEndPaciente);
        lblEndPaciente.setBounds(70, 200, 60, 20);

        txtEndPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtEndPaciente);
        txtEndPaciente.setBounds(70, 220, 340, 30);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 190, 780, 10);

        lblBairroPaciente.setText("Bairro:");
        getContentPane().add(lblBairroPaciente);
        lblBairroPaciente.setBounds(70, 270, 50, 20);

        txtBairroPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtBairroPaciente);
        txtBairroPaciente.setBounds(70, 290, 220, 30);

        lblNumPaciente.setText("Numero:");
        getContentPane().add(lblNumPaciente);
        lblNumPaciente.setBounds(580, 270, 60, 20);

        txtNumPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtNumPaciente);
        txtNumPaciente.setBounds(580, 290, 90, 30);

        lblCompPaciente.setText("Complemento:");
        getContentPane().add(lblCompPaciente);
        lblCompPaciente.setBounds(330, 270, 90, 20);

        txtCompPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtCompPaciente);
        txtCompPaciente.setBounds(330, 290, 200, 30);

        btnCadastrarPaciente.setText("Cadastrar");
        btnCadastrarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrarPaciente);
        btnCadastrarPaciente.setBounds(310, 360, 110, 30);

        try {
            txtTelPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtTelPaciente);
        txtTelPaciente.setBounds(70, 142, 250, 30);

        try {
            txtCpfPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(txtCpfPaciente);
        txtCpfPaciente.setBounds(500, 82, 170, 30);

        try {
            txtCepPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(txtCepPaciente);
        txtCepPaciente.setBounds(500, 220, 170, 30);

        mnuPacientes.setText("Pacientes");

        itmAlterarPaciente.setText("Alterar");
        itmAlterarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAlterarPacienteActionPerformed(evt);
            }
        });
        mnuPacientes.add(itmAlterarPaciente);

        itmBuscarPaciente.setText("Buscar");
        itmBuscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBuscarPacienteActionPerformed(evt);
            }
        });
        mnuPacientes.add(itmBuscarPaciente);

        itmExcluirPaciente.setText("Excluir");
        itmExcluirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirPacienteActionPerformed(evt);
            }
        });
        mnuPacientes.add(itmExcluirPaciente);

        itmListarPaciente.setText("Listar");
        itmListarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmListarPacienteActionPerformed(evt);
            }
        });
        mnuPacientes.add(itmListarPaciente);

        mnuPaciente.add(mnuPacientes);

        mnuFuncionarios.setText("Funcionários");

        mnuMedicos.setText("Médico");

        itmAlterarMedico.setText("Alterar");
        itmAlterarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAlterarMedicoActionPerformed(evt);
            }
        });
        mnuMedicos.add(itmAlterarMedico);

        itmExcluirMedico.setText("Excluir");
        itmExcluirMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirMedicoActionPerformed(evt);
            }
        });
        mnuMedicos.add(itmExcluirMedico);

        itmBuscarMedico.setText("Buscar");
        itmBuscarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBuscarMedicoActionPerformed(evt);
            }
        });
        mnuMedicos.add(itmBuscarMedico);

        itmCadastrarMedico.setText("Cadastrar");
        itmCadastrarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCadastrarMedicoActionPerformed(evt);
            }
        });
        mnuMedicos.add(itmCadastrarMedico);

        mnuFuncionarios.add(mnuMedicos);

        mnuRecepcionista.setText("Recepcionista");

        itmAlterarRep.setText("Alterar");
        itmAlterarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAlterarRepActionPerformed(evt);
            }
        });
        mnuRecepcionista.add(itmAlterarRep);

        itmExcluirRep.setText("Excluir");
        itmExcluirRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirRepActionPerformed(evt);
            }
        });
        mnuRecepcionista.add(itmExcluirRep);

        itmBuscarRep.setText("Buscar");
        itmBuscarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBuscarRepActionPerformed(evt);
            }
        });
        mnuRecepcionista.add(itmBuscarRep);

        itmCadastrarRep.setText("Cadastrar");
        itmCadastrarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCadastrarRepActionPerformed(evt);
            }
        });
        mnuRecepcionista.add(itmCadastrarRep);

        mnuFuncionarios.add(mnuRecepcionista);

        mnuPaciente.add(mnuFuncionarios);

        setJMenuBar(mnuPaciente);

        setSize(new java.awt.Dimension(778, 493));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePacienteActionPerformed

    private void txtEndPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndPacienteActionPerformed

    private void txtBairroPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroPacienteActionPerformed

    private void txtNumPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumPacienteActionPerformed

    private void txtCompPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompPacienteActionPerformed

    private void btnCadastrarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarPacienteActionPerformed
        String nome, endereco, cep, bairro, complemento, cpf, telefone, numero;

        nome = txtNomePaciente.getText();
        endereco = txtEndPaciente.getText();
        cep = txtCepPaciente.getText();
        bairro = txtBairroPaciente.getText();
        complemento = txtCompPaciente.getText();
        cpf = txtCpfPaciente.getText();
        telefone = txtTelPaciente.getText();
        numero = txtNumPaciente.getText();

        try {
            new AppDao().cadastrarPaciente(nome, cpf, telefone, endereco, cep, bairro, complemento, numero);

            JOptionPane.showMessageDialog(null, "Paciente cadastrado com sucesso.");

            txtNomePaciente.setText("");
            txtEndPaciente.setText("");
            txtCepPaciente.setText("");
            txtBairroPaciente.setText("");
            txtCompPaciente.setText("");
            txtCpfPaciente.setText("");
            txtTelPaciente.setText("");
            txtNumPaciente.setText("");

            new Triagem().setVisible(true);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar localizar o Driver.");
        } catch (SQLException ex) {
            if (ex.getMessage().contains("Duplicate entry")) {
                JOptionPane.showMessageDialog(null, "Paciente já cadastrado");
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao tentar localizar o Banco de Dados." + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnCadastrarPacienteActionPerformed

    private void itmAlterarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAlterarPacienteActionPerformed
        String nome;

        nome = JOptionPane.showInputDialog("Digite o nome do paciente a ser alterado: ");

        try {

            ResultSet dadosPaciente = new AppDao().exibirPaciente(nome);

            if (dadosPaciente.next()) {
                String nomeP, enderecoP, cepP, bairroP, complementoP, cpfP, telefoneP, numeroP;

                nomeP = dadosPaciente.getString("nome");
                cpfP = dadosPaciente.getString("cpf");
                telefoneP = dadosPaciente.getString("telefone");
                enderecoP = dadosPaciente.getString("endereco");
                cepP = dadosPaciente.getString("cep");
                bairroP = dadosPaciente.getString("bairro");
                complementoP = dadosPaciente.getString("complemento");
                numeroP = dadosPaciente.getString("numero");

                new AlterarPaciente(nomeP,
                         cpfP, telefoneP, enderecoP, cepP,
                         bairroP, complementoP,
                         numeroP
                ).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Paciente não encontrado ou não existe.");
            }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_itmAlterarPacienteActionPerformed

    private void itmBuscarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBuscarPacienteActionPerformed
        String nome;

        nome = JOptionPane.showInputDialog("Digite o nome do paciente a ser buscado: ");

        try {

            ResultSet dadosPaciente = new AppDao().exibirPaciente(nome);

            if (dadosPaciente.next()) {
                String nomeP, enderecoP, cepP, bairroP, complementoP, cpfP, telefoneP, numeroP;

                nomeP = dadosPaciente.getString("nome");
                cpfP = dadosPaciente.getString("cpf");
                telefoneP = dadosPaciente.getString("telefone");
                enderecoP = dadosPaciente.getString("endereco");
                cepP = dadosPaciente.getString("cep");
                bairroP = dadosPaciente.getString("bairro");
                complementoP = dadosPaciente.getString("complemento");
                numeroP = dadosPaciente.getString("numero");

                new ExibirPaciente(nomeP,
                         cpfP, telefoneP,
                         enderecoP, cepP,
                         bairroP, complementoP,
                         numeroP
                ).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Paciente não encontrado ou não existe.");
            }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_itmBuscarPacienteActionPerformed

    private void itmExcluirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirPacienteActionPerformed
        String nome;
        nome = JOptionPane.showInputDialog(null, "Paciente a excluir: ");
            
        try{
            int retorno = new AppDao().excluirPaciente(nome);
            
            if(retorno == 1){
                JOptionPane.showMessageDialog(null, "Paciente excluido com sucesso");
            }else{
                JOptionPane.showMessageDialog(null, "Paciente não existe");
            }
            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, "Erro:"+ex.getMessage());
        }
    }//GEN-LAST:event_itmExcluirPacienteActionPerformed

    private void txtTelPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelPacienteActionPerformed

    private void itmListarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmListarPacienteActionPerformed
        new ListarPacientes().setVisible(true);
    }//GEN-LAST:event_itmListarPacienteActionPerformed

    private void itmAlterarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAlterarMedicoActionPerformed
        String nome;

        nome = JOptionPane.showInputDialog("Digite o nome do médico a ser alterado: ");

        try {

            ResultSet dadosMedico = new AppDao().exibirMedico(nome);

            if (dadosMedico.next()) {
                String nomeM, senha, crm;

                nomeM = dadosMedico.getString("nome");
                senha = dadosMedico.getString("senha");
                crm = dadosMedico.getString("crm");
                

                new AlterarMedico(nomeM,senha,crm).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Recepcionista não encontrado ou não existe.");
            }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_itmAlterarMedicoActionPerformed

    private void itmCadastrarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCadastrarMedicoActionPerformed
        new CadastrarMedico().setVisible(true);
    }//GEN-LAST:event_itmCadastrarMedicoActionPerformed

    private void itmBuscarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBuscarMedicoActionPerformed
        String nome;
        
        nome = JOptionPane.showInputDialog("Digite o nome do médico a ser buscado: ");
        
        try {

            ResultSet dadosMedico = new AppDao().exibirMedico(nome);

            if (dadosMedico.next()) {
                String nomeM, senha, crm;

                nomeM = dadosMedico.getString("nome");
                senha = dadosMedico.getString("senha");
                crm = dadosMedico.getString("crm");
                

                new ExibirMedico(nomeM,senha,crm).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Recepcionista não encontrado ou não existe.");
            }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_itmBuscarMedicoActionPerformed

    private void itmExcluirMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirMedicoActionPerformed
        String nome;
        
        nome = JOptionPane.showInputDialog("Digite o nome do médico a ser buscado: ");
        
        try{
            int retorno = new AppDao().excluirMedico(nome);
            
            if(retorno == 1){
                JOptionPane.showMessageDialog(null, "Médico excluido com sucesso");
            }else{
                JOptionPane.showMessageDialog(null, "Médico não existe");
            }
            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, "Erro:"+ex.getMessage());
        }
    }//GEN-LAST:event_itmExcluirMedicoActionPerformed

    private void itmCadastrarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCadastrarRepActionPerformed
        new CadastrarRecepcionista().setVisible(true);
    }//GEN-LAST:event_itmCadastrarRepActionPerformed

    private void itmAlterarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAlterarRepActionPerformed
        String nome;

        nome = JOptionPane.showInputDialog("Digite o nome do(a) recepcionista a ser alterado: ");

        try {

            ResultSet dadosRep = new AppDao().exibirRep(nome);

            if (dadosRep.next()) {
                String nomeM, senha;

                nomeM = dadosRep.getString("nome");
                senha = dadosRep.getString("senha");
                

                new AlterarRecepcionista(nomeM,senha).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Recepcionista não encontrado ou não existe.");
            }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_itmAlterarRepActionPerformed

    private void itmExcluirRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirRepActionPerformed
        String nome;
        
        nome = JOptionPane.showInputDialog("Digite o nome do(a) recepcionista a ser excluido: ");
        
        try{
            int retorno = new AppDao().excluirRep(nome);
            
            if(retorno == 1){
                JOptionPane.showMessageDialog(null, "Recepcionista excluido com sucesso");
            }else{
                JOptionPane.showMessageDialog(null, "Recepcionista não existe");
            }
            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, "Erro:"+ex.getMessage());
        }
    }//GEN-LAST:event_itmExcluirRepActionPerformed

    private void itmBuscarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBuscarRepActionPerformed
        String nome;
        
        nome = JOptionPane.showInputDialog("Digite o nome do(a) recepcionista a ser buscado: ");
        
        try {

            ResultSet dadosRep = new AppDao().exibirRep(nome);

            if (dadosRep.next()) {
                String nomeM, senha;

                nomeM = dadosRep.getString("nome");
                senha = dadosRep.getString("senha");
                

                new ExibirRecepcionista(nomeM,senha).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Recepcionista não encontrado ou não existe.");
            }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_itmBuscarRepActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrarPaciente;
    private javax.swing.JMenuItem itmAlterarMedico;
    private javax.swing.JMenuItem itmAlterarPaciente;
    private javax.swing.JMenuItem itmAlterarRep;
    private javax.swing.JMenuItem itmBuscarMedico;
    private javax.swing.JMenuItem itmBuscarPaciente;
    private javax.swing.JMenuItem itmBuscarRep;
    private javax.swing.JMenuItem itmCadastrarMedico;
    private javax.swing.JMenuItem itmCadastrarRep;
    private javax.swing.JMenuItem itmExcluirMedico;
    private javax.swing.JMenuItem itmExcluirPaciente;
    private javax.swing.JMenuItem itmExcluirRep;
    private javax.swing.JMenuItem itmListarPaciente;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBairroPaciente;
    private javax.swing.JLabel lblCepPaciente;
    private javax.swing.JLabel lblCompPaciente;
    private javax.swing.JLabel lblCpfPaciente;
    private javax.swing.JLabel lblEndPaciente;
    private javax.swing.JLabel lblNomePaciente;
    private javax.swing.JLabel lblNumPaciente;
    private javax.swing.JLabel lblTelPaciente;
    private javax.swing.JLabel lblTituloFormulario;
    private javax.swing.JMenu mnuFuncionarios;
    private javax.swing.JMenu mnuMedicos;
    private javax.swing.JMenuBar mnuPaciente;
    private javax.swing.JMenu mnuPacientes;
    private javax.swing.JMenu mnuRecepcionista;
    private javax.swing.JTextField txtBairroPaciente;
    private javax.swing.JFormattedTextField txtCepPaciente;
    private javax.swing.JTextField txtCompPaciente;
    private javax.swing.JFormattedTextField txtCpfPaciente;
    private javax.swing.JTextField txtEndPaciente;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextField txtNumPaciente;
    private javax.swing.JFormattedTextField txtTelPaciente;
    // End of variables declaration//GEN-END:variables
}
